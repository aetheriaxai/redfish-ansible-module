---

- block:
    - name: get ISO attach status
      ansible.builtin.uri:
        url: "https://{{ idrac_ip }}{{ idrac_osd_service_url }}/Actions/DellOSDeploymentService.GetAttachStatus"
        user: "{{ idrac_user }}"
        password: "{{ idrac_password }}"
        method: POST
        headers:
          Accept: "application/json"
          Content-Type: "application/json"
          OData-Version: "4.0"
        body: "{}"
        status_code: 200
        validate_certs: "{{ validate_certs }}"
        force_basic_auth: "{{ force_basic_auth }}"
      register: attach_status
      delegate_to: localhost

    - name: set ISO attach status as a fact variable
      ansible.builtin.set_fact:
        idrac_iso_attach_status: "{{ idrac_iso_attach_status | default({}) | combine({item.key: item.value}) }}"
      with_dict:
        DriversAttachStatus: "{{ attach_status.json.DriversAttachStatus }}"
        ISOAttachStatus: "{{ attach_status.json.ISOAttachStatus }}"

  when:
    - idrac_osd_service_url is defined
    - idrac_osd_service_url|length > 0
  tags:
    - "{{ command }}"


- block:
    - name: get ISO attach status
      ansible.builtin.uri:
        url: "https://{{ idrac_ip }}:{{ idrac_https_port }}/wsman"
        user: "{{ idrac_user }}"
        password: "{{ idrac_password }}"
        method: POST
        headers:
          Content-Type: "application/xml"
        body: "{{ lookup('ansible.builtin.template', 'idrac_get_attach_status.j2') }}"
        validate_certs: "{{ validate_certs }}"
        force_basic_auth: "{{ force_basic_auth }}"
        status_code: 200
        return_content: yes
      register: wsman_envelope
      delegate_to: localhost

    - name: set ISO attach status as a fact variable
      ansible.builtin.set_fact:
        idrac_iso_attach_status: "{{ idrac_iso_attach_status | default({}) | combine({ item.key : GetAttachStatus_Code[item.key][item.value] }) }}"
      with_dict:
        DriversAttachStatus: "{{ wsman_envelope.content | trim | regex_findall('(?<=<n1:DriversAttachStatus>).*(?=<\/n1:DriversAttachStatus>)') | first }}"
        ISOAttachStatus: "{{  wsman_envelope.content | trim | regex_findall('(?<=<n1:ISOAttachStatus>).*(?=<\/n1:ISOAttachStatus>)') | first }}"
      when: wsman_envelope.content is search(".*<n1:ReturnValue>0</n1:ReturnValue>.*")

    - ansible.builtin.fail:
        msg: "Failed to get the ISO attach status!"
      when: wsman_envelope.content is search(".*<n1:ReturnValue>2</n1:ReturnValue>.*")

  when: (idrac_osd_service_url is not defined) or (idrac_osd_service_url is defined and idrac_osd_service_url|length == 0)
