---

- name: "Get device info for service tag {{ device_service_tag }}"
  block:
    - name: "Get device info for service tag {{ device_service_tag }}"
      ansible.builtin.uri:
        url: "https://{{ ome_hostname }}/api/DeviceService/Devices?$filter=DeviceServiceTag%20eq%20%27{{ device_service_tag }}%27"
        user: "{{ ome_username }}"
        password: "{{ ome_password }}"
        method: GET
        headers:
          Accept: "application/json"
        validate_certs: "{{ validate_certs }}"
        force_basic_auth: "{{ force_basic_auth }}"
      delegate_to: localhost
      register: ome_device_info_response

    - name: "Fail if device lookup fails for the service tag {{ device_service_tag }}"
      ansible.builtin.fail:
        msg: "No device found for service tag {{ device_service_tag }}"
      when: ome_device_info_response.json['@odata.count'] == 0

    - ansible.builtin.set_fact:
        ome_device_info: "{{ ome_device_info_response.json.value[0] }}"

  when: device_service_tag is defined and device_service_tag|length > 0

- block:
    - name: "Get device info for device ID {{ device_id }}"
      ansible.builtin.uri:
        url: "https://{{ ome_hostname }}/api/DeviceService/Devices({{ device_id }})"
        user: "{{ ome_username }}"
        password: "{{ ome_password }}"
        method: GET
        headers:
          Accept: "application/json"
        validate_certs: "{{ validate_certs }}"
        force_basic_auth: "{{ force_basic_auth }}"
      delegate_to: localhost
      register: ome_device_info_response

    - ansible.builtin.set_fact:
        ome_device_info: "{{ ome_device_info_response.json }}"

  when: device_id is defined and device_id

- name: Create targets payload for submitting an inventory task
  ansible.builtin.set_fact:
    targets_payload: "{{ ome_device_info | community.general.json_query(_query) }}"
  vars:
    _query: "{ Id: Id, Data: '', TargetType: {Id: Type, Name: 'DEVICE' } }"

- name: "Submit an inventory task job for device {{ device_id | default(device_service_tag) }}"
  ansible.builtin.uri:
    url: "https://{{ ome_hostname }}/api/JobService/Jobs"
    user: "{{ ome_username }}"
    password: "{{ ome_password }}"
    method: POST
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
    body:
      JobName: "Inventory Task for device {{ device_id | default(device_service_tag) }}"
      JobDescription: "Inventory Task for device {{ device_id | default(device_service_tag) }}"
      Schedule: "{{ ome_device_inv_task_schedule_default }}"
      State: "{{ ome_device_inv_task_state_default }}"
      JobType:
        Id: 8
        Name: "Inventory_Task"
      Targets: ["{{ targets_payload }}"]
    body_format: json
    validate_certs: "{{ validate_certs }}"
    force_basic_auth: "{{ force_basic_auth }}"
    status_code: [201]
  delegate_to: localhost
  register: ome_device_inv_task_response

- name: "Poll the inventory task status till completion or failure"
  dellemc.openmanage.ome_job_info:
    hostname: "{{ ome_hostname }}"
    username: "{{ ome_username }}"
    password: "{{ ome_password }}"
    job_id: "{{ ome_device_inv_task_response.json.Id }}"
  register: ome_job_info_response
  until: ome_job_info_response['job_info']['LastRunStatus']['Name'] == 'Completed' or ome_job_info_response['job_info']['LastRunStatus']['Name'] == 'Failed'
  retries: "{{ ome_device_inv_task_poll_retries_default }}"
  delay: "{{ ome_device_inv_task_poll_delay_default }}"
  delegate_to: localhost
  when: not ome_device_inv_task_response.failed

- name: "Fail the play if inventory task failed for device {{ device_id | default(device_service_tag) }}"
  ansible.builtin.fail:
    msg: "Inventory task (Id: {{ ome_device_inv_task_response.json.Id }}) failed for device {{ device_id | default(device_service_tag) }}"
  when:
    - ome_job_info_response['job_info']['LastRunStatus']['Name'] == 'Failed'
    - not ome_job_info_response.failed

- ansible.builtin.debug:
    msg: "Inventory task (Id: {{ ome_device_inv_task_response.json.Id }}) finished successfully for device {{ device_id | default(device_service_tag) }}"
  when:
    - ome_job_info_response['job_info']['LastRunStatus']['Name'] == 'Completed'
    - not ome_job_info_response.failed

